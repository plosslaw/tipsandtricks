for existing heroku app
heroku git:remote -a thawing-inlet-61413

git status

git cheatsheet:

git clone git@github.com:USER-NAME/REPOSITORY-NAME.git or git clone https://github.com/user-name/repository-name.git
git push origin master
Commands related to workflow:
git add .
git commit -m "A message describing what you have done to make this snapshot different"
Commands related to checking status or log history
git status
git log

undo last commit
git reset --soft HEAD~1

undo stage
git reset

show all branches(remote + local)
git branch -a


delete remote branch
git push origin --delete feature/login
git push origin :name-of-branch (hacky way)

delete local branch
git branch -d feature/login

show remote branches
git branch -r

git show-branch

delete branch
git branch -d <name of branch>

create new branch
git checkout -b <name of branch>

create new branch clone of old branch
git checkout -b <new branch> <old branch>

create new remote branch
git push <remote-name> <branch-name> 
git push <remote-name> <local-branch-name>:<remote-branch-name>
git push --set-upstream <remote-name> <local-branch-name> //adds upstream ref 

clean up local branch after merging
git checkout develop
git pull                 // bring develop branch up-to-date
git fetch --prune        // remove remote-tracking branch
git branch -D plosslaw-branch // remove local branch


checkout branch
git checkout <name of branch>

merge selected branch with current branch
git merge <name of branch>



Clone contents of one branch to existing branch (overwrite):
git checkout branchA
git checkout branchB .  #copies the contents of develop into the working directory
git commit -am "Making branchA match branchB"

Sync feature branch with remote develop branch:
git checkout develop
git pull
git checkout feature

git rebase -X ours develop #keep changes from develop
git rebase -X theirs develop #keep changes from feature


Merge feature branch with master branch:
git checkout feature
git pull
git checkout master

git merge -X theirs feature #keep changes from feature
git merge -X ours feature #keep changes from master
git rm {DELETED-FILE-NAME} #for any deletions 


Rebase feature branch
git push origin feature -f

git merge master
git push origin feature

force git pull
git reset --hard <remote repo>/<remote-branch>

Reset remote to certain commit
git reset --hard <commit-hash> 
git push -f <remote> <local branch>:<remote branch> 

Get commit hash
git log //take first 7 char

Reference using HEAD:
git rebase HEAD~4 // 4 commits ago from current head
git rebase HEAD~1 // 1 commit ago from current head


update list of remote branches
git remote update origin --prune

stash local changes (no commit)
git stash

Remove stash 
git stash list
git stash drop <stash_id>
git stash clear

remove local changes
git checkout .

remove untracked files/dir
git clean -f(d)
